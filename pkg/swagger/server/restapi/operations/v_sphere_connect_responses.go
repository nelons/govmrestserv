// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// VSphereConnectOKCode is the HTTP code returned for type VSphereConnectOK
const VSphereConnectOKCode int = 200

/*
VSphereConnectOK Success.

swagger:response vSphereConnectOK
*/
type VSphereConnectOK struct {

	/*
	  In: Body
	*/
	Payload *VSphereConnectOKBody `json:"body,omitempty"`
}

// NewVSphereConnectOK creates VSphereConnectOK with default headers values
func NewVSphereConnectOK() *VSphereConnectOK {

	return &VSphereConnectOK{}
}

// WithPayload adds the payload to the v sphere connect o k response
func (o *VSphereConnectOK) WithPayload(payload *VSphereConnectOKBody) *VSphereConnectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v sphere connect o k response
func (o *VSphereConnectOK) SetPayload(payload *VSphereConnectOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VSphereConnectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VSphereConnectBadRequestCode is the HTTP code returned for type VSphereConnectBadRequest
const VSphereConnectBadRequestCode int = 400

/*
VSphereConnectBadRequest A generic failure message, the reason for which is in the attached error message.

swagger:response vSphereConnectBadRequest
*/
type VSphereConnectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *VSphereConnectBadRequestBody `json:"body,omitempty"`
}

// NewVSphereConnectBadRequest creates VSphereConnectBadRequest with default headers values
func NewVSphereConnectBadRequest() *VSphereConnectBadRequest {

	return &VSphereConnectBadRequest{}
}

// WithPayload adds the payload to the v sphere connect bad request response
func (o *VSphereConnectBadRequest) WithPayload(payload *VSphereConnectBadRequestBody) *VSphereConnectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v sphere connect bad request response
func (o *VSphereConnectBadRequest) SetPayload(payload *VSphereConnectBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VSphereConnectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VSphereConnectUnauthorizedCode is the HTTP code returned for type VSphereConnectUnauthorized
const VSphereConnectUnauthorizedCode int = 401

/*
VSphereConnectUnauthorized Invalid Token was passed, this is an unauthenicated request.

swagger:response vSphereConnectUnauthorized
*/
type VSphereConnectUnauthorized struct {
}

// NewVSphereConnectUnauthorized creates VSphereConnectUnauthorized with default headers values
func NewVSphereConnectUnauthorized() *VSphereConnectUnauthorized {

	return &VSphereConnectUnauthorized{}
}

// WriteResponse to the client
func (o *VSphereConnectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// VSphereConnectForbiddenCode is the HTTP code returned for type VSphereConnectForbidden
const VSphereConnectForbiddenCode int = 403

/*
VSphereConnectForbidden Permission issue on the target vCenter Server/ESXi.

swagger:response vSphereConnectForbidden
*/
type VSphereConnectForbidden struct {
}

// NewVSphereConnectForbidden creates VSphereConnectForbidden with default headers values
func NewVSphereConnectForbidden() *VSphereConnectForbidden {

	return &VSphereConnectForbidden{}
}

// WriteResponse to the client
func (o *VSphereConnectForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// VSphereConnectNotFoundCode is the HTTP code returned for type VSphereConnectNotFound
const VSphereConnectNotFoundCode int = 404

/*
VSphereConnectNotFound The target server could not be found.

swagger:response vSphereConnectNotFound
*/
type VSphereConnectNotFound struct {
}

// NewVSphereConnectNotFound creates VSphereConnectNotFound with default headers values
func NewVSphereConnectNotFound() *VSphereConnectNotFound {

	return &VSphereConnectNotFound{}
}

// WriteResponse to the client
func (o *VSphereConnectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
