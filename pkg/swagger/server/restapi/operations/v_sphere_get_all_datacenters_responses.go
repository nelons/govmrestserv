// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/nelons/vsphere-rest-server/pkg/swagger/server/models"
)

// VSphereGetAllDatacentersOKCode is the HTTP code returned for type VSphereGetAllDatacentersOK
const VSphereGetAllDatacentersOKCode int = 200

/*
VSphereGetAllDatacentersOK Successful request. Returns JSON containing a count and the collection of objects.

swagger:response vSphereGetAllDatacentersOK
*/
type VSphereGetAllDatacentersOK struct {

	/*
	  In: Body
	*/
	Payload *models.ObjectCollection `json:"body,omitempty"`
}

// NewVSphereGetAllDatacentersOK creates VSphereGetAllDatacentersOK with default headers values
func NewVSphereGetAllDatacentersOK() *VSphereGetAllDatacentersOK {

	return &VSphereGetAllDatacentersOK{}
}

// WithPayload adds the payload to the v sphere get all datacenters o k response
func (o *VSphereGetAllDatacentersOK) WithPayload(payload *models.ObjectCollection) *VSphereGetAllDatacentersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v sphere get all datacenters o k response
func (o *VSphereGetAllDatacentersOK) SetPayload(payload *models.ObjectCollection) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VSphereGetAllDatacentersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VSphereGetAllDatacentersBadRequestCode is the HTTP code returned for type VSphereGetAllDatacentersBadRequest
const VSphereGetAllDatacentersBadRequestCode int = 400

/*
VSphereGetAllDatacentersBadRequest A general failure occured, more details are contained within the message.

swagger:response vSphereGetAllDatacentersBadRequest
*/
type VSphereGetAllDatacentersBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequestError `json:"body,omitempty"`
}

// NewVSphereGetAllDatacentersBadRequest creates VSphereGetAllDatacentersBadRequest with default headers values
func NewVSphereGetAllDatacentersBadRequest() *VSphereGetAllDatacentersBadRequest {

	return &VSphereGetAllDatacentersBadRequest{}
}

// WithPayload adds the payload to the v sphere get all datacenters bad request response
func (o *VSphereGetAllDatacentersBadRequest) WithPayload(payload *models.BadRequestError) *VSphereGetAllDatacentersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v sphere get all datacenters bad request response
func (o *VSphereGetAllDatacentersBadRequest) SetPayload(payload *models.BadRequestError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VSphereGetAllDatacentersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
